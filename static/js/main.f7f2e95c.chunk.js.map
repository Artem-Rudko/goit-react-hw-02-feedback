{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","App.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","className","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Math","round","Section","title","children","App","state","handleFeedback","e","target","dataset","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA+BeA,EA7BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACpB,sBAAKC,UAAU,mBAAf,UACI,wBACIC,KAAK,SACLD,UAAU,UACV,YAAU,OACVE,QAASH,EAJb,kBAQA,wBACIE,KAAK,SACLD,UAAU,aACV,YAAU,UACVE,QAASH,EAJb,qBAQA,wBACIE,KAAK,SACLD,UAAU,SACV,YAAU,MACVE,QAASH,EAJb,qBCGOI,EAvBI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC3BC,EAAQH,EAAOC,EAAUC,EACzBE,EAAqBC,KAAKC,MACpB,IAAPN,GAAeA,EAAOC,EAAUC,IAGrC,OACI,qBAAKN,UAAU,aAAf,SACe,IAAVO,EACG,qCACI,uCAAUH,KACV,0CAAaC,EAAb,OACA,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WAGJ,wDCHDG,G,MAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,sBAAKb,UAAU,UAAf,UACI,6BAAKY,IACJC,OCgCMC,E,4MAhCXC,MAAQ,CACJX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTU,eAAiB,SAAAC,GACiB,SAA1BA,EAAEC,OAAOC,QAAQlB,KACjB,EAAKmB,UAAS,SAAAC,GAAS,MAAK,CAAEjB,KAAMiB,EAAUjB,KAAO,MACpB,YAA1Ba,EAAEC,OAAOC,QAAQlB,KACxB,EAAKmB,UAAS,SAAAC,GAAS,MAAK,CAAEhB,QAASgB,EAAUhB,QAAU,MAE3D,EAAKe,UAAS,SAAAC,GAAS,MAAK,CAAEf,IAAKe,EAAUf,IAAM,O,4CAI3D,WACI,MAA+BgB,KAAKP,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACI,sBAAKN,UAAU,MAAf,UACI,cAAC,EAAD,CAASY,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBb,gBAAiBuB,KAAKN,mBAE3C,cAAC,EAAD,CAASJ,MAAM,aAAf,SACI,cAAC,EAAD,CAAYR,KAAMA,EAAMC,QAASA,EAASC,IAAKA,a,GA1BjDiB,aCDlBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f7f2e95c.chunk.js","sourcesContent":["import './FeedbackOptions.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n    <div className=\"feedbackControls\">\n        <button\n            type=\"button\"\n            className=\"goodBtn\"\n            data-type=\"good\"\n            onClick={onLeaveFeedback}\n        >\n            Good\n        </button>\n        <button\n            type=\"button\"\n            className=\"neutralBtn\"\n            data-type=\"neutral\"\n            onClick={onLeaveFeedback}\n        >\n            Neutral\n        </button>\n        <button\n            type=\"button\"\n            className=\"badBtn\"\n            data-type=\"bad\"\n            onClick={onLeaveFeedback}\n        >\n            Bad\n        </button>\n    </div>\n);\n\nexport default FeedbackOptions;\n","const Statistics = ({ good, neutral, bad }) => {\n    const total = good + neutral + bad;\n    const positivePercentage = Math.round(\n        (good * 100) / (good + neutral + bad),\n    );\n\n    return (\n        <div className=\"Statistics\">\n            {total !== 0 ? (\n                <>\n                    <p>Good: {good}</p>\n                    <p>Neutral: {neutral} </p>\n                    <p>Bad: {bad}</p>\n                    <p>Total: {total}</p>\n                    <p>Positive feedback: {positivePercentage} %</p>\n                </>\n            ) : (\n                <p>No feedback is given</p>\n            )}\n        </div>\n    );\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => (\n    <div className=\"Section\">\n        <h1>{title}</h1>\n        {children}\n    </div>\n);\n\nSection.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleFeedback = e => {\n        if (e.target.dataset.type === 'good') {\n            this.setState(prevState => ({ good: prevState.good + 1 }));\n        } else if (e.target.dataset.type === 'neutral') {\n            this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n        } else {\n            this.setState(prevState => ({ bad: prevState.bad + 1 }));\n        }\n    };\n\n    render() {\n        const { good, neutral, bad } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions onLeaveFeedback={this.handleFeedback} />\n                </Section>\n                <Section title=\"Statistics\">\n                    <Statistics good={good} neutral={neutral} bad={bad} />\n                </Section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}