{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Math","round","Section","title","children","App","state","handleFeedback","e","target","dataset","setState","prevState","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAwBeA,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,qBAAKC,UAAU,mBAAf,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBAEIC,KAAK,SACLH,UAAWE,EACX,YAAWA,EACXE,QAASL,EALb,SAOKG,GANIA,SCwBNG,EA7BI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC3BC,EAAQH,EAAOC,EAAUC,EACzBE,EAAqBC,KAAKC,MACpB,IAAPN,GAAeA,EAAOC,EAAUC,IAGrC,OACI,qBAAKR,UAAU,aAAf,SACe,IAAVS,EACG,qCACI,uCAAUH,KACV,0CAAaC,EAAb,OACA,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WAGJ,wDCJDG,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,sBAAKf,UAAU,UAAf,UACI,6BAAKc,IACJC,OCiCMC,E,4MAjCXC,MAAQ,CACJX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTU,eAAiB,SAAAC,GACb,IAAQhB,EAASgB,EAAEC,OAAOC,QAAlBlB,KAER,EAAKmB,UAAS,SAAAC,GAAS,sBAAQpB,EAAOoB,EAAUpB,GAAQ,O,EAG5DL,QAAU0B,OAAOC,KAAK,EAAKR,O,4CAE3B,WACI,MAA+BS,KAAKT,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACI,sBAAKR,UAAU,MAAf,UACI,cAAC,EAAD,CAASc,MAAM,wBAAf,SACI,cAAC,EAAD,CACIhB,QAAS4B,KAAK5B,QACdC,gBAAiB2B,KAAKR,mBAG9B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACI,cAAC,EAAD,CAAYR,KAAMA,EAAMC,QAASA,EAASC,IAAKA,a,GA3BjDmB,aCDlBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.6eef1799.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport './FeedbackOptions.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n    <div className=\"feedbackControls\">\n        {options.map(option => (\n            <button\n                key={option}\n                type=\"button\"\n                className={option}\n                data-type={option}\n                onClick={onLeaveFeedback}\n            >\n                {option}\n            </button>\n        ))}\n    </div>\n);\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad }) => {\n    const total = good + neutral + bad;\n    const positivePercentage = Math.round(\n        (good * 100) / (good + neutral + bad),\n    );\n\n    return (\n        <div className=\"Statistics\">\n            {total !== 0 ? (\n                <>\n                    <p>Good: {good}</p>\n                    <p>Neutral: {neutral} </p>\n                    <p>Bad: {bad}</p>\n                    <p>Total: {total}</p>\n                    <p>Positive feedback: {positivePercentage} %</p>\n                </>\n            ) : (\n                <p>No feedback is given</p>\n            )}\n        </div>\n    );\n};\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => (\n    <div className=\"Section\">\n        <h1>{title}</h1>\n        {children}\n    </div>\n);\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.any.isRequired,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleFeedback = e => {\n        const { type } = e.target.dataset;\n\n        this.setState(prevState => ({ [type]: prevState[type] + 1 }));\n    };\n\n    options = Object.keys(this.state);\n\n    render() {\n        const { good, neutral, bad } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={this.options}\n                        onLeaveFeedback={this.handleFeedback}\n                    />\n                </Section>\n                <Section title=\"Statistics\">\n                    <Statistics good={good} neutral={neutral} bad={bad} />\n                </Section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}